# Generated by Django 3.1.8 on 2021-05-02 12:08

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.contrib.taggit
import modelcluster.fields
import phonenumber_field.modelfields
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0023_add_choose_permissions'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('wagtailcore', '0061_auto_20210423_1203'),
    ]

    operations = [
        migrations.CreateModel(
            name='HeadingNewsPublicationsTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name_heading_ru', models.CharField(max_length=255, verbose_name='Название рубрики')),
                ('name_heading_uk', models.CharField(max_length=255, verbose_name='Назва рубрики')),
            ],
            options={
                'verbose_name': 'Рубрики для новостей/публикаций',
                'verbose_name_plural': 'Рубрики для новостей/публикаций',
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('contact_data_email', models.EmailField(default='example@mail.com', max_length=254, verbose_name='Email для связи')),
                ('contact_data_phone', phonenumber_field.modelfields.PhoneNumberField(default='+380999999999', max_length=128, region='UA', verbose_name='Контактный номер')),
                ('company_position', wagtail.core.fields.RichTextField(blank=True, verbose_name='Позиция/философия компании')),
                ('company_position_ru', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Позиция/философия компании')),
                ('company_position_uk', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Позиция/философия компании')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='NewsPublication',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('publication_title', models.CharField(max_length=255, verbose_name='Название публикации/новости')),
                ('publication_title_ru', models.CharField(max_length=255, null=True, verbose_name='Название публикации/новости')),
                ('publication_title_uk', models.CharField(max_length=255, null=True, verbose_name='Название публикации/новости')),
                ('publication_text', models.TextField(max_length=10000, verbose_name='Текст публикации/новости')),
                ('publication_text_ru', models.TextField(max_length=10000, null=True, verbose_name='Текст публикации/новости')),
                ('publication_text_uk', models.TextField(max_length=10000, null=True, verbose_name='Текст публикации/новости')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата публикации/новости')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания публикации/новости')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения публикации/новости')),
                ('caption', models.CharField(blank=True, max_length=255, verbose_name='Подпись к изображению')),
                ('caption_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='Подпись к изображению')),
                ('caption_uk', models.CharField(blank=True, max_length=255, null=True, verbose_name='Подпись к изображению')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='TeamPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('key_phrase_title', models.CharField(max_length=255, verbose_name='Ключевая фраза/Заголовок (о кадровой политике компании)')),
                ('key_phrase_title_ru', models.CharField(max_length=255, null=True, verbose_name='Ключевая фраза/Заголовок (о кадровой политике компании)')),
                ('key_phrase_title_uk', models.CharField(max_length=255, null=True, verbose_name='Ключевая фраза/Заголовок (о кадровой политике компании)')),
                ('key_phrase_text', wagtail.core.fields.RichTextField(verbose_name='Текст-расшифровка ключевой фразы/заголовка')),
                ('key_phrase_text_ru', wagtail.core.fields.RichTextField(null=True, verbose_name='Текст-расшифровка ключевой фразы/заголовка')),
                ('key_phrase_text_uk', wagtail.core.fields.RichTextField(null=True, verbose_name='Текст-расшифровка ключевой фразы/заголовка')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_page', to='website_admin_api.homepage', verbose_name='Домашняя страница для страницы команды')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('full_name', models.CharField(max_length=255, verbose_name='ФИО')),
                ('full_name_ru', models.CharField(max_length=255, null=True, verbose_name='ФИО')),
                ('full_name_uk', models.CharField(max_length=255, null=True, verbose_name='ФИО')),
                ('competence', models.TextField(max_length=510, verbose_name='сфера компетенции')),
                ('competence_ru', models.TextField(max_length=510, null=True, verbose_name='сфера компетенции')),
                ('competence_uk', models.TextField(max_length=510, null=True, verbose_name='сфера компетенции')),
                ('professional_credo', models.TextField(max_length=510, verbose_name='Профессиональное кредо')),
                ('professional_credo_ru', models.TextField(max_length=510, null=True, verbose_name='Профессиональное кредо')),
                ('professional_credo_uk', models.TextField(max_length=510, null=True, verbose_name='Профессиональное кредо')),
                ('additional_information', models.TextField(max_length=1000, verbose_name='Дополнительная информация')),
                ('additional_information_ru', models.TextField(max_length=1000, null=True, verbose_name='Дополнительная информация')),
                ('additional_information_uk', models.TextField(max_length=1000, null=True, verbose_name='Дополнительная информация')),
                ('photo_caption', models.CharField(blank=True, max_length=250, verbose_name='Подпись к изображению')),
                ('photo_caption_ru', models.CharField(blank=True, max_length=250, null=True, verbose_name='Подпись к изображению')),
                ('photo_caption_uk', models.CharField(blank=True, max_length=250, null=True, verbose_name='Подпись к изображению')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='website_admin_api.teampage', verbose_name='Учасник команды')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo', to='wagtailimages.image', verbose_name='Фото учасника команды')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsPublicationTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='website_admin_api.newspublication', verbose_name='Теги')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='website_admin_api_newspublicationtag_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsPublicationPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('home_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_publication_page', to='website_admin_api.homepage', verbose_name='Домашння страница для страницы "Новости"')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='newspublication',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_publications', to='website_admin_api.newspublicationpage', verbose_name='Новости/Публикации'),
        ),
        migrations.AddField(
            model_name='newspublication',
            name='publication_heading',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='publication', to='website_admin_api.headingnewspublicationstypes', verbose_name='Название рубрики'),
        ),
        migrations.AddField(
            model_name='newspublication',
            name='publication_image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image'),
        ),
        migrations.AddField(
            model_name='newspublication',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', related_name='news_tags', through='website_admin_api.NewsPublicationTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='HomeHeaderGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250, verbose_name='Подпись к изображению')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='website_admin_api.homepage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActivitiesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('home_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities_page', to='website_admin_api.homepage', verbose_name='Домашння страница для страницы Направления деятельности')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('kind_of_activity', models.TextField(max_length=1000, verbose_name='Вид деятельности')),
                ('kind_of_activity_ru', models.TextField(max_length=1000, null=True, verbose_name='Вид деятельности')),
                ('kind_of_activity_uk', models.TextField(max_length=1000, null=True, verbose_name='Вид деятельности')),
                ('activity_image_caption', models.CharField(blank=True, max_length=250, verbose_name='Подпись к изображению')),
                ('activity_image_caption_ru', models.CharField(blank=True, max_length=250, null=True, verbose_name='Подпись к изображению')),
                ('activity_image_caption_uk', models.CharField(blank=True, max_length=250, null=True, verbose_name='Подпись к изображению')),
                ('activity_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_image', to='wagtailimages.image', verbose_name='Изображение для вида деятельности')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='website_admin_api.activitiespage', verbose_name='Вид деятельности')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AboutCompanyPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('about_company_text', wagtail.core.fields.RichTextField(verbose_name='Текст о компании')),
                ('about_company_text_ru', wagtail.core.fields.RichTextField(null=True, verbose_name='Текст о компании')),
                ('about_company_text_uk', wagtail.core.fields.RichTextField(null=True, verbose_name='Текст о компании')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='about_company_page', to='website_admin_api.homepage', verbose_name='Домашння страница для страницы "О компании"')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
